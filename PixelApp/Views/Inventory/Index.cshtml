@model PixelApp.Views.Inventory.Models.InventoryIndexViewModel
@{
    ViewBag.Title = "Inventory";
}

<style type="text/css">
    i.maxed {
        color: gold;
    }
</style>

<h2>Inventory</h2>

<div class="alert alert-info">
    <p>Workers need the right tools, you need a way to keep track of who needs what and what you have in stock. Welcome to the inventory</p>
    <p>Here is the list of items you currently own, how many, what they help you get more of, and what percentage of people are using them.</p>
</div>

<table class="table table-striped">
    <tr>
        <th>Item</th>
        <th>Owned </th>
        <th>
            Max Boost 
            <i class="fa fa-question-circle" data-toggle="tooltip" title="Maximum boost when 100% of your allocated population can use these"></i>
        </th>
        <th>Boost Type</th>
        <th>
            Effect 
            <i class="fa fa-question-circle" data-toggle="tooltip" title="Percentage of your allocated population that can use these"></i>
        </th>
        <th></th>
    </tr>
    @foreach (var item in Model.Items)
    {
        var allocation = Model.Allocations.Single(x => x.Key.ToString() == item.BoostType).Value;
        var people = allocation * Model.CivilianPopulation;
        var populationEffect = Math.Min(item.Quantity / people, 1m);

        <tr>
            <td>@item.Name</td>
            <td>@item.Quantity</td>
            <td>@($"{(item.MaxBoost / 100):P2}")</td>
            <td>@item.BoostType</td>
            <td>
                @($"{(populationEffect):P2}")
                @if (item.Quantity >= people)
                {
                    <i class="fa fa-star maxed"></i>
                }
            </td>
            <td>&nbsp;</td>
        </tr>
    }
</table>
