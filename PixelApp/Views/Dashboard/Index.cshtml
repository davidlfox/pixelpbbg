@model PixelApp.Views.Dashboard.Models.DashboardViewModel
@{
    ViewBag.Title = "Dashboard";
    var assetPath = "//storageasagvk5xvrja2.blob.core.windows.net/assets/";
}

<style type="text/css">
    .section-info {
        background-color: #222123;
    }

    .territory-info {
        padding: 30px !important;
    }

        .territory-info img.type {
            border: 3px solid #666;
        }

    .recent-attack-info {
        padding: 15px 30px !important;
    }

    .resource-info {
        padding: 30px !important;
    }

        .resource-info .type {
            margin-left: auto;
            margin-right: auto;
            display: block;
        }

        .resource-info input {
            margin-left: auto;
            margin-right: auto;
            width: 100px;
        }

    .save-resource-allocation {
        margin-top: 15px;
    }
</style>

@if (!string.IsNullOrWhiteSpace(Model.MOTD.Message))
{
    <div class="alert alert-danger">
        <strong>@Model.MOTD.Posted.ToShortDateString()</strong>: @Model.MOTD.Message<br />
        - @Model.MOTD.Author
    </div>
}

<div class="row section-info territory-info">
    <div class="col-sm-4">
        <h4>Territory: <strong>@Model.TerritoryName @($"({Model.TerritoryX}, {Model.TerritoryY})")</strong></h4>
        <p>Type: <strong>@Model.TerritoryType</strong></p>
        <p>Outskirts appeal: <strong>@Model.OutskirtsAppeal</strong></p>
        <p>Civilian Population: <strong>@Model.CivilianPopulation</strong></p>
    </div>
    <div class="col-sm-4">
        <img class="type" src="@($"{assetPath}{Model.TerritoryType.ToString().ToLower()}.png")" alt="@Model.TerritoryType" />
    </div>
    <div class="col-sm-4">
        <p>
            Neighboring Territories:
            <ul>
                @foreach (var neighbor in Model.Neighbors)
                {
                    <li>@neighbor.Direction: <strong>@neighbor.TerritoryName</strong></li>
                }
            </ul>
        </p>
    </div>
</div>
<div class="row">&nbsp;</div>
<div class="row section-info recent-attack-info">
    <div class="col-xs-12">
        <h4>Recent Attacks</h4>
        @if (Model.RecentAttacks.Count == 0)
        {
            <p class="alert alert-info">Your territory has not recently been attacked.</p>
        }
        else
        {
            foreach (var log in Model.RecentAttacks)
            {
                <p class="alert alert-@(log.WasAttacked ? "danger" : "success")">@log.TimeOfAttack.ToShortDateString(): @log.Message</p>
            }
        }
    </div>
</div>
<div class="row">&nbsp;</div>
<div class="row section-info resource-info text-center">
    <p class="alert alert-info">
        This is your resource stockpile. You can adjust the <strong>percentages</strong> of civilian population dedicated to gathering each resource.
        <strong>Percentages must total 100% or less.</strong>
    </p>
    @foreach (var res in Model.Resources)
    {
        <div class="col-sm-2">
            <img class="type" src="@($"{assetPath}{res.Name.ToLower()}.png")" alt="@res.Name" />
            <strong>@res.Count</strong>
            <div class="input-group">
                <input type="number" placeholder="% @res.Name" value="@((int)(res.Allocation * 100))" class="form-control allocation allocation-@res.Name.ToLower()" />
                <span class="input-group-addon"><strong>%</strong></span>
            </div>
        </div>
    }
    <a href="javascript:void(0);" class="save-resource-allocation btn btn-lg btn-warning">Save Allocations</a>
</div>
<div class="row">
    <div class="col-sm-6">
        <p>Todo: link to map</p>
    </div>
    <div class="col-sm-6">
        <h4>Daily Task: <strong>@Model.DailyTask</strong></h4>
        <p>Time to completion: todo</p>
        <h4>Research</h4>
        <p>Progress: todo</p>
    </div>
</div>

@section scripts {
    <script type="text/javascript">
        $(function () {
            $('.save-resource-allocation').on('click', function (e) {
                var sum = 0;
                $('.resource-info .allocation').each(function () {
                    sum += Number($(this).val());
                });
                if (sum > 100) {
                    toastr.error('Allocation percentages must total 100% or less');
                } else {
                    data = {
                        WaterAllocation: $('.allocation-water').val(),
                        WoodAllocation: $('.allocation-wood').val(),
                        FoodAllocation: $('.allocation-food').val(),
                        StoneAllocation: $('.allocation-stone').val(),
                        OilAllocation: $('.allocation-oil').val(),
                        IronAllocation: $('.allocation-iron').val(),
                    };
                    $.ajax({
                        type: 'post',
                        url: '/dashboard/updateresourceallocations',
                        data: data,
                        success: function (data) {
                            if (data.success) {
                                toastr.success('Your resource allocations have been saved, and they will be used for future resource gains.');
                            } else {
                                toastError(data.message);
                            }
                        },
                        error: function (error) {
                            toastError('There was a problem saving your resource allocations. Please try again later.');
                        }
                    })
                }
            });

            function toastError(message) {
                if (message.length) {
                    toastr.error(message);
                } else {
                    toastr.error('There was a problem. Please try again later.');
                }
            }
        });
    </script>
}