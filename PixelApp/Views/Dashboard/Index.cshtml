@model PixelApp.Views.Dashboard.Models.DashboardViewModel
@{
    ViewBag.Title = "Dashboard";
    var assetPath = "//storageasagvk5xvrja2.blob.core.windows.net/assets/";
}

<style type="text/css">
    .section-info {
        background-color: #222123;
        padding: 15px 30px !important;
    }

    img.territory-type {
        border: 3px solid #666;
    }

    img.resource-type {
        margin-left: auto;
        margin-right: auto;
        display: block;
        width: 60px;
    }

    .resource-info input {
        margin-left: auto;
        margin-right: auto;
        width: 100px;
    }

    .save-resource-allocation {
        margin-top: 15px;
    }

    .map-link{
    }

    .label-attack {
        line-height: 2;
    }

    .darker {
        color: #333;
    }

    .right-border {
        border-right: 1px solid #aaa;
        min-height: 150px;
    }
</style>

@if (!string.IsNullOrWhiteSpace(Model.MOTD.Message))
{
    <div class="alert alert-danger alert-dismissable">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>
        <strong>@Model.MOTD.Posted.ToShortDateString()</strong>: @Model.MOTD.Message<br />
        - @Model.MOTD.Author<br />
        @Html.ActionLink("MOTD History", "Index", "MOTD")
    </div>
}

<div class="alert alert-success text-center">
    <a href="@Url.Action("Index", "Paypal")">
        <h4><strong><u>BRIBE THE GOVERNMENT FOR A 24-HOUR RESOURCE BOOST--JUST $0.99!!!</u></strong></h4>
    </a>
</div>

<div class="row section-info territory-info">
    <div class="alert alert-info text-center">
        <strong>This is home base. Here you manage the people on resource collection as well as get basic insights to recent zombie attacks.</strong>
    </div>
    <div class="col-sm-4 right-border">
        <img class="territory-type" src="@($"{assetPath}{Model.TerritoryType.ToString().ToLower()}.png")" alt="@Model.TerritoryType" />
        <p>Civilian Population: <strong>@Model.CivilianPopulation</strong></p>
    </div>
    <div class="col-sm-4 right-border">
        <h4>Territory: <strong>@Model.TerritoryName @($"({Model.TerritoryX}, {Model.TerritoryY})")</strong></h4>
        <p>
            Type: <strong>@Model.TerritoryType</strong>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            Outskirts appeal: <strong>@Model.OutskirtsAppeal</strong>
        </p>
        <p>
            Neighboring Territories:
            <ul>
                @foreach (var neighbor in Model.Neighbors)
                {
                    <li>@neighbor.Direction: <strong>@neighbor.TerritoryName</strong></li>
                }
            </ul>
        </p>
    </div>
    <div class="col-sm-4">
        <h4>Recent Attacks</h4>
        @if (Model.RecentAttacks.Count == 0)
        {
            <p class="alert alert-info">Your territory has not recently been attacked.</p>
        }
        else
        {
            <h4>
                @foreach (var log in Model.RecentAttacks)
                {
                    <span class="label label-@(log.WasAttacked ? "danger" : "success") label-lg label-attack" data-toggle="tooltip" title="@log.Message">
                        @log.TimeOfAttack.ToShortDateString()
                    </span>
                    @:&nbsp;
                }
            </h4>
        }
    </div>
</div>
<div class="row">&nbsp;</div>
<div class="row section-info resource-info text-center">
    <p class="alert alert-info">
        <strong>Either enter in a number or use the up and down arrows to adjust the percentage of the population assigned to gathering a specific resource.</strong>
    </p>
    @foreach (var res in Model.Resources)
    {
        <div class="col-sm-2">
            <img class="resource-type" src="@($"{assetPath}{res.Name.ToLower()}.png")" alt="@res.Name" data-toggle="tooltip" title="@res.Name" />
            <strong>@res.Count</strong>
            <div class="input-group">
                <input type="number" placeholder="% @res.Name" value="@((int)(res.Allocation * 100))" class="form-control allocation allocation-@res.Name.ToLower()" />
                <span class="input-group-addon"><strong class="darker">%</strong></span>
            </div>
        </div>
    }
    <a href="javascript:void(0);" class="save-resource-allocation btn btn-success">Save Allocations</a>
</div>
<div class="row">&nbsp;</div>
<div class="row section-info text-center col-xs-12">
    <h4 class="col-xs-4 map-link">Territory Map</h4>
    <a class="btn btn-primary col-xs-4 map-link" href="@Url.Action("Index", "Map")">Local View</a>
    <a class="btn btn-primary col-xs-4 map-link" href="@Url.Action("Index", "Map", new { size = 25 })">Macro View</a>
</div>
<div class="row">&nbsp;</div>

@section scripts {
    <script type="text/javascript">
        $(function () {
            $('.save-resource-allocation').on('click', function (e) {
                var sum = 0;
                $('.resource-info .allocation').each(function () {
                    sum += Number($(this).val());
                });
                if (sum > 100) {
                    toastr.error('Allocation percentages must total 100% or less');
                } else {
                    data = {
                        WaterAllocation: $('.allocation-water').val(),
                        WoodAllocation: $('.allocation-wood').val(),
                        FoodAllocation: $('.allocation-food').val(),
                        StoneAllocation: $('.allocation-stone').val(),
                        OilAllocation: $('.allocation-oil').val(),
                        IronAllocation: $('.allocation-iron').val(),
                    };
                    $.ajax({
                        type: 'post',
                        url: '/dashboard/updateresourceallocations',
                        data: data,
                        success: function (data) {
                            if (data.success) {
                                toastr.success('Your resource allocations have been saved, and they will be used for future resource gains.');
                            } else {
                                toastError(data.message);
                            }
                        },
                        error: function (error) {
                            toastError('There was a problem saving your resource allocations. Please try again later.');
                        }
                    })
                }
            });

            function toastError(message) {
                if (message.length) {
                    toastr.error(message);
                } else {
                    toastr.error('There was a problem. Please try again later.');
                }
            }
        });
    </script>
}
