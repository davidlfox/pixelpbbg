@model PixelApp.Views.Map.Models.MapViewModel
@{
    ViewBag.Title = "Territory Map";
    var assetPath = "//storageasagvk5xvrja2.blob.core.windows.net/assets/";
    var size = (40 / ((decimal)Model.Reach * 2) + 1);
}

<style>
        .map-canvas {
            background-color: #b9bbb4;
        }

        .nomarginnopadding {
            padding: 0px;
            margin: 0px;
        }

        .territory {
            margin: 1px;
            display:inline-block;
            height: @(size)vw;
            width: @(size)vw;
            line-height:4;
        }

        .primary {
            border: 3px solid;
            border-color: red;
        }

        .available {
            border: 3px solid;
            border-color: forestgreen;
            background-color:darkslategrey;
        }

        .unavavilable{
            background-color:black;
        }

        .tooltip-inner {
    font-size:15px;
        }
</style>

@section scripts {
    <script type="text/javascript">
        $(function () {
            $('[data-toggle="tooltip"]').tooltip();
        });
    </script>
}

<h2>@(Model.IsTerritorySelectionMode ? "Please select an available Territory" : "Territory Map")</h2>
<div class="row">
    <div class="well well-lg map-canvas text-center">
        @for (int y = (Model.Y + Model.Reach); y >= (Model.Y - Model.Reach); y--)
        {
            <div class="row">
                @for (int x = (Model.X - Model.Reach); x <= (Model.X + Model.Reach); x++)
                {
                    var pixel = Model.Territories.Where(z => z.X.Equals(x) && z.Y.Equals(y)).FirstOrDefault();
                    if (pixel != null)
                    {
                        <div class="territory @(pixel.X == Model.X && pixel.Y == Model.Y ? "primary" : "")" data-toggle="tooltip" title="@pixel.Name @pixel.UserName">
                            <img class="type" style="width:100%; height:100%;" src="@($"{assetPath}{pixel.Type.ToString().ToLower()}.png")" alt="@pixel.Type" />
                        </div>
                    }
                    else
                    {
                        if (Model.IsTerritorySelectionMode && Model.Territories.Where(a =>
                            (a.X + 1).Equals(x) && a.Y.Equals(y)
                            || (a.X - 1).Equals(x) && a.Y.Equals(y)
                            || a.X.Equals(x) && (a.Y + 1).Equals(y)
                            || a.X.Equals(x) && (a.Y - 1).Equals(y)).Any())
                        {
                            <a href="@Url.Action("SelectTerritory", "Map", new { x = x, y = y })"><div class="territory available" data-toggle="tooltip" title="This territory is available."></div></a>
                        }
                        else
                        {
                            <div class="territory unavavilable"></div>
                        }
                    }
                }
            </div>
        }

    </div>
</div>
