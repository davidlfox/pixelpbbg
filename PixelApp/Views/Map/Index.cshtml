@model PixelApp.Views.Map.Models.MapViewModel
@{
    ViewBag.Title = "Territory Map";
    var assetPath = "//storageasagvk5xvrja2.blob.core.windows.net/assets/";
    var size = (30 / ((decimal)Model.Reach * 2) + 1);
}

<style type="text/css">
    .territory {
        display:inline-block;
        height: @(size)vw;
        width: @(size)vw;
    }
</style>

<style>
    .map-canvas {
        background-color: #b9bbb4;
        font-size: 5px;
        line-height: normal;
    }

    .nomarginnopadding {
        padding: 0px;
        margin: 0px;
    }

    .available {
        background-color: darkslategrey;
    }

    .unavavilable {
        background-color: black;
    }

    .tooltip-inner {
        font-size: 15px;
    }

    .territory img {
        vertical-align: inherit;
    }

    img.type {
        width: 100%;
        height: 100%;
    }
</style>

@section scripts {
    <script type="text/javascript">
        $(function () {
            $('[data-toggle="tooltip"]').tooltip({ html: true });
        });
    </script>
}
<h2>@(Model.Mode != null && Model.Mode.Equals("s") ? "Please select an available Territory" : "Territory Map")</h2>
<div class="col-xs-12 clearfix">
    <a class="btn btn-sm btn-primary pull-right" href="@Url.Action("Index", new { Mode = Request["Mode"] != null ? Request["Mode"].ToString() : null })">Local View</a>
    <a class="btn btn-sm btn-primary pull-right" href="@Url.Action("Index", new { Size = 25, Mode = Request["Mode"] != null ? Request["Mode"].ToString() : null })">Macro View</a>
</div>
<div>
    <div class="well well-lg map-canvas text-center">
        @for (int y = (Model.Y + Model.Reach); y >= (Model.Y - Model.Reach); y--)
            {
            <div>
                @for (int x = (Model.X - Model.Reach); x <= (Model.X + Model.Reach); x++)
                {
                    var pixel = Model.Territories.FirstOrDefault(z => z.X.Equals(x) && z.Y.Equals(y));
                    if (pixel != null)
                    {
                        var IsMyTerritory = (x.Equals(Model.X) && y.Equals(Model.Y));
                        <a href='@(Model.Mode != null && Model.Mode.Equals("c") && !IsMyTerritory ? Url.Action("AttackTerritory", "Map", new { xCoord = x, yCoord = y }) : "javascript:void(0)")'>
                            <div class="territory" data-toggle="tooltip" title="@pixel.Name <br /> @pixel.UserName <br /> Level: @pixel.UserLevel">
                                <img class="type" src="@($"{assetPath}{pixel.Type.ToString().ToLower()}.png")" alt="@pixel.Type" />
                            </div>
                        </a>
                    }
                    else
                    {
                        if (Model.Mode != null && Model.Mode.Equals("s") && Model.Territories.Any(a =>
                            (a.X + 1).Equals(x) && a.Y.Equals(y)
                            || (a.X - 1).Equals(x) && a.Y.Equals(y)
                            || a.X.Equals(x) && (a.Y + 1).Equals(y)
                            || a.X.Equals(x) && (a.Y - 1).Equals(y)))
                        {
                            <a href="@Url.Action("SelectTerritory", "Map", new { x = x, y = y })">
                                <div class="territory available" data-toggle="tooltip" title="This territory is available."></div>
                            </a>
                        }
                        else
                        {
                            <div class="territory unavavilable"></div>
                        }
                    }
                }
            </div>
        }

    </div>
</div>
